<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="/WEB-INF/config/config.properties"/>
        <property name="fileEncoding" value="UTF-8"/>
    </bean>

    <!-- dataSource -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url"
                  value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <!-- sessionFactory -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:/mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:/mappers/**/*.xml"/>
    </bean>
    <bean class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSession"/>
    </bean>

    <!-- Google 소셜 로그인 연결 설정 -->
    <bean id="googleConnectionFactory"
          class="org.springframework.social.google.connect.GoogleConnectionFactory">
        <constructor-arg
                value="${google.clientId}"/>
        <constructor-arg value="${google.secretId}"/>
    </bean>


    <bean id="googleOAuth2Parameters"
          class="org.springframework.social.oauth2.OAuth2Parameters">
        <qualifier value="googleOAuth2Parameters"/>
        <property name="scope"
                  value="email profile"/>
        <property name="redirectUri"
                  value="http://localhost:8080/auth/google/callback"/>
    </bean>

    <bean id="googleAuthInfo" class="com.ndgndg91.auth.GoogleAuthInfo">
        <constructor-arg value="${google.clientId}"/>
        <constructor-arg value="${google.secretId}"/>
    </bean>

    <bean id="kakaoAuthInfo" class="com.ndgndg91.auth.KaKaoAuth2Info">
        <constructor-arg value="${kakao.clientId}"/>
        <constructor-arg value="${kakao.redirectUri}"/>
    </bean>

    <bean id="naverAuthInfo" class="com.ndgndg91.auth.NaverAuthInfo">
        <constructor-arg value="${naver.clientId}"/>
        <constructor-arg value="${naver.clientSecret}"/>
        <constructor-arg value="${naver.redirecUrl}"/>
        <constructor-arg value="${naver.profileApiUrl}"/>
    </bean>


    <!--Facebook 소셜 로그인 연결 설정-->
    <bean id="facebookConnectionFactory"
          class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
        <constructor-arg value="${facebook.appId}" />
        <constructor-arg value="${facebook.secretId}" />
    </bean>

    <bean id="facebookOAuth2Parameters"
          class="org.springframework.social.oauth2.OAuth2Parameters">
        <qualifier value="facebookOAuth2Parameters"/>
        <property name="scope" value="email" />
        <property name="redirectUri" value="https://localhost:8080/auth/facebook/redirect" />
    </bean>

    <bean id="freeMarkerConfigurationFactory" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="templateLoaderPath" value="/WEB-INF/freemarker"/>
        <property name="preferFileSystemAccess" value="false"/>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="52428800"/> <!-- 50mb 제한 -->
    </bean>

    <bean id="synologyUploadInfo" class="com.ndgndg91.syno.SynoUploadInfo">
        <constructor-arg value="${synology.host}"/>
        <constructor-arg value="${synology.imageUploadPath}"/>
        <constructor-arg value="${synology.webAPIUploadPost}"/>
        <constructor-arg value="${synology.webAPILoginAuthGet}"/>
        <constructor-arg value="${synology.login}"/>
        <constructor-arg value="${synology.logout}"/>
        <constructor-arg value="${synology.apiName}"/>
        <constructor-arg value="${synology.apiVersion}"/>
        <constructor-arg value="${synology.apiMethod}"/>
        <constructor-arg value="${synology.createParents}"/>
    </bean>
</beans>